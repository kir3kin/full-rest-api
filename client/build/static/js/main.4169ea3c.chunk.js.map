{"version":3,"sources":["assets/images/avatar-placeholder.png","context/contacts/contactsContext.ts","components/Contact.tsx","components/ContactsLoader.tsx","pages/ListContact.tsx","pages/AddContact.tsx","pages/EditContact.tsx","App.tsx","context/contacts/contactsReduser.ts","context/contacts/ContactsState.tsx","index.tsx"],"names":["contactsContext","React","createContext","Contact","contact","removeContact","useContext","className","src","avatar","alt","name","email","to","_id","height","width","onClick","ContactsLoader","role","ListContact","contacts","loading","fetchContacts","useEffect","length","map","AddContact","addContact","history","useHistory","useState","formData","setFormData","sendForm","event","a","preventDefault","push","inputHandle","prev","target","value","onSubmit","onChange","id","type","htmlFor","disabled","trim","EditContact","setContact","contactId","useParams","updateContact","fetchContactById","then","App","component","path","exact","handlers","FETCH_CONTACTS","state","payload","FETCH_CONTACT","ADD_CONTACT","REMOVE_CONTACT","filter","UPDATE_CONTACT","find","SHOW_LOADER","HIDE_LOADER","DEFAULT","contactsReducer","action","ContactsState","children","useReducer","dispatch","axios","get","result","data","uContact","put","res","nContact","post","delete","Provider","render","document","getElementById"],"mappings":"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","file":"static/js/main.4169ea3c.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/avatar-placeholder.8b00224c.png\";","import React from \"react\"\r\nimport { iContactContext } from \"../../interfaces/contacts\"\r\n\r\nexport const contactsContext = React.createContext({} as iContactContext)","import React, { useContext } from \"react\"\r\nimport { iContact } from \"../interfaces/contacts\"\r\nimport { Trash, PencilSquare } from 'react-bootstrap-icons'\r\nimport { Link } from \"react-router-dom\"\r\nimport avatar from '../assets/images/avatar-placeholder.png'\r\nimport '../assets/scss/Contact.scss'\r\nimport { contactsContext } from \"../context/contacts/contactsContext\"\r\n\r\nexport const Contact: React.FC<{contact: iContact}> = ({\r\n\tcontact\r\n}) => {\r\n\r\n\tconst { removeContact } = useContext(contactsContext)\r\n\r\n\treturn (\r\n\t\t<div className=\"card mb-3\" key={contact._id}>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-9 d-flex flex-row align-items-center\">\r\n\t\t\t\t\t\t<div className=\"contact-image me-3\">\r\n\t\t\t\t\t\t\t<img src={avatar} className=\"w-100 h-100\" alt=\"avatar\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\t\tclassName=\"card-title\"\r\n\t\t\t\t\t\t\t>{contact.name}</h5>\r\n\t\t\t\t\t\t\t<p className=\"card-text fw-bolder email-blue\">{contact.email}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-3 d-flex flex-row justify-content-end\">\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={`/edit-contact/${contact._id}`}\r\n\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary border-0 d-flex align-items-center\"\r\n\t\t\t\t\t\t><PencilSquare height=\"2em\" width=\"2em\" /></Link>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"btn btn-outline-danger border-0\"\r\n\t\t\t\t\t\t\tonClick={() => removeContact(contact._id)}\r\n\t\t\t\t\t\t><Trash height=\"2em\" width=\"2em\" /></button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\"\r\n\r\nexport const ContactsLoader: React.FC = () => (\r\n\t<div className=\"spinner-border text-primary\" role=\"status\">\r\n\t</div>\r\n)","import React, { useEffect, useContext } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Contact } from \"../components/Contact\"\r\nimport { ContactsLoader } from \"../components/ContactsLoader\"\r\nimport { contactsContext } from \"../context/contacts/contactsContext\"\r\n\r\nexport const ListContact: React.FC = () => {\r\n\r\n  const {contacts, loading, fetchContacts} = useContext(contactsContext)\r\n  \r\n  useEffect(() => {\r\n    fetchContacts()\r\n  }, [])\r\n\r\n\treturn (\r\n\t\t<>\r\n      <div className=\"row\">\r\n        <h2 className=\"col-6 mb-0\">Contact List</h2>\r\n        <div className=\"col-6 d-flex justify-content-end\">\r\n          <Link to='/add-contact' className=\"btn px-4 btn-primary\">Add Contact</Link>\r\n        </div>\r\n      </div>\r\n      <hr className=\"my-4\" />\r\n\t\t\t{\r\n\t\t\t\tcontacts.length ? (\r\n\t\t\t\t\tcontacts.map(contact => {\r\n\t\t\t\t\t\treturn <Contact\r\n\t\t\t\t\t\t\tcontact={contact}\r\n\t\t\t\t\t\t\tkey={contact._id}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t})\r\n\t\t\t\t) : (loading ? <ContactsLoader /> : <p>There are no contacts!</p>)\r\n\t\t\t}\r\n\t\t</>\r\n\t)\r\n}","import React, { useContext, useState } from \"react\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { contactsContext } from \"../context/contacts/contactsContext\"\r\nimport { iContactShort } from \"../interfaces/contacts\"\r\n\r\nexport const AddContact: React.FC = () => {\r\n  const { addContact } = useContext(contactsContext)\r\n  const history = useHistory()\r\n\r\n\tconst [formData, setFormData] = useState<iContactShort>({\r\n    name: '',\r\n    email: ''\r\n  })\r\n\r\n\tconst sendForm = async (event: React.FormEvent) => {\r\n    event.preventDefault()\r\n    addContact(formData)\r\n    history.push('/')\r\n  }\r\n\r\n\tconst canCreate = (): boolean => {\r\n    return !!formData.name.trim() && !!formData.email.trim()\r\n  }\r\n\r\n\tconst inputHandle = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      ...{[event.target.name]: event.target.value}\r\n    }))\r\n  }\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t<div className=\"row\">\r\n\t\t\t<h2 className=\"col-6 mb-0\">Add contact</h2>\r\n\t\t\t<div className=\"col-6 d-flex justify-content-end\">\r\n        <Link to='/' className=\"btn px-3 btn-danger\">Back</Link>\r\n      </div>\r\n\t\t</div>\r\n    <hr className=\"my-4\" />\r\n\t\t<form\r\n        onSubmit={event => sendForm(event)}\r\n        className=\"\"\r\n      >\r\n        <div className=\"form-floating mb-3\">\r\n          <input\r\n            value={formData.name}\r\n            onChange={event => inputHandle(event)}\r\n            id=\"name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n          />\r\n          <label htmlFor=\"name\">Name</label>\r\n        </div>\r\n        <div className=\"form-floating mb-3\">\r\n          <input\r\n            value={formData.email}\r\n            onChange={event => inputHandle(event)}\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n          />\r\n          <label htmlFor=\"email\">Email</label>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary px-3\"\r\n          disabled={!canCreate()}\r\n        >Add</button>\r\n      </form>\r\n\t\t</>\r\n\t)\r\n}","import React, { useContext, useEffect, useState } from \"react\"\r\nimport { Link, useHistory, useParams } from \"react-router-dom\"\r\nimport { ContactsLoader } from \"../components/ContactsLoader\"\r\nimport { contactsContext } from \"../context/contacts/contactsContext\"\r\nimport { iContact } from \"../interfaces/contacts\"\r\n\r\nexport const EditContact: React.FC = () => {\r\n\tconst [contact, setContact] = useState<iContact>({\r\n\t\t_id: '',\r\n\t\tname: '',\r\n\t\temail: ''\r\n\t})\r\n\t\r\n\tconst {id: contactId} = useParams<{id: string}>()\r\n\tconst history = useHistory()\r\n\tconst { updateContact, fetchContactById } = useContext(contactsContext)\r\n\t\t\r\n\tuseEffect(() => {\r\n\t\tfetchContactById(contactId).then((contact: iContact) => {\r\n\t\t\tsetContact(contact)\r\n\t\t})\r\n\t}, [])\r\n\r\n\tconst sendForm = async (event: React.FormEvent) => {\r\n    event.preventDefault()\r\n    updateContact(contact)\r\n\t\thistory.push('/')\r\n  }\r\n\t\r\n\tconst inputHandle = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetContact(prev => ({\r\n\t\t\t...prev,\r\n      ...{[event.target.name]: event.target.value}\r\n    }))\r\n  }\r\n\t\r\n\tconst canUpdate = (): boolean => {\r\n\t\treturn !!contact.name.trim() && !!contact.email.trim()\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<h2 className=\"col-6 mb-0\">Edit contact</h2>\r\n\t\t\t\t<div className=\"col-6 d-flex justify-content-end\">\r\n\t\t\t\t\t<Link to='/' className=\"btn px-3 btn-danger\">Back</Link>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr className=\"my-4\" />\r\n\t\t\t\r\n\t\t\t{contact ? (\r\n\t\t\t\t<form\r\n\t\t\t\t\tonSubmit={event => sendForm(event)}\r\n\t\t\t\t\tclassName=\"\"\r\n\t\t\t\t>\r\n\t\t\t\t\t<div className=\"form-floating mb-3\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tvalue={contact.name}\r\n\t\t\t\t\t\t\tonChange={event => inputHandle(event)}\r\n\t\t\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label htmlFor=\"name\">Name</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"form-floating mb-3\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\tvalue={contact.email}\r\n\t\t\t\t\t\t\tonChange={event => inputHandle(event)}\r\n\t\t\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tclassName=\"btn btn-primary px-3\"\r\n\t\t\t\t\t\tdisabled={!canUpdate()}\r\n\t\t\t\t\t>Update</button>\r\n\t\t\t\t</form>\r\n\t\t\t) : <ContactsLoader />}\r\n\t\t</>\r\n\t)\r\n}","import React from 'react'\nimport './assets/scss/App.scss'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { ListContact } from './pages/ListContact'\nimport { AddContact } from './pages/AddContact'\nimport { EditContact } from './pages/EditContact'\n\nexport const App: React.FC = () => (\n  <div className=\"container pt-3\">\n  <h1 className=\"text-center\">Contact Manager</h1>\n  <hr className=\"my-4\" />\n  \n    <BrowserRouter>\n      <Switch>\n        <Route component={ListContact} path=\"/\" exact />\n        <Route component={AddContact} path=\"/add-contact\" />\n        <Route component={EditContact} path=\"/edit-contact/:id\" />\n      </Switch>\n    </BrowserRouter>\n  </div>\n)","import { iContactsState } from \"../../interfaces/contacts\"\r\nimport { iContactsActionTypes } from \"../types\"\r\n\r\ntype actionType = {\r\n\ttype: iContactsActionTypes\r\n\tpayload?: any\r\n}\r\n\r\ntype actionFuncType = (state: iContactsState, action: actionType) => any\r\ntype handlersType = Record<iContactsActionTypes, actionFuncType>\r\n\r\nconst handlers: handlersType = {\r\n\tFETCH_CONTACTS: (state, {payload}) => ({...state, contacts: payload}),\r\n\tFETCH_CONTACT: (state, {payload}) => ({...state, contacts: [payload]}),\r\n\tADD_CONTACT: (state, {payload}) => ({\r\n\t\tcontacts: [\r\n\t\t\t...state.contacts,\r\n\t\t\tpayload\r\n\t\t]\r\n\t}),\r\n\tREMOVE_CONTACT: (state, {payload}) => ({\r\n\t\t...state,\r\n\t\tcontacts: state.contacts.filter(contact => contact._id !== payload)\r\n\t}),\r\n\tUPDATE_CONTACT: (state, {payload}) => {\r\n\t\treturn {\r\n\t\t\t...state,\r\n\t\t\tcontacts: [\r\n\t\t\t// change into map\r\n\t\t\t...state.contacts.filter(contact => contact._id !== payload._id),\r\n\t\t\t{...state.contacts.find(contact => contact._id === payload._id), ...payload}\r\n\t\t]\r\n\t\t}\r\n\t},\r\n\tSHOW_LOADER: (state) => ({...state, loading: true}),\r\n\tHIDE_LOADER: (state) => ({...state, loading: false}),\r\n\tDEFAULT: state => state\r\n}\r\n\r\ntype contactsReduserType = (state: iContactsState, action: actionType) => any\r\n\r\nexport const contactsReducer: contactsReduserType = (state, action) => {\r\n\tconst handle = handlers[action.type] || handlers.DEFAULT\r\n\treturn handle(state, action)\r\n}","import React, { useReducer } from \"react\"\r\nimport { contactsReducer } from \"./contactsReduser\"\r\nimport { contactsContext } from \"./contactsContext\"\r\nimport { iContact, iContactShort, iContactsState } from \"../../interfaces/contacts\"\r\nimport axios from 'axios'\r\n\r\nexport const ContactsState: React.FC = ({ children }) => {\r\n\tconst initialContactsState: iContactsState = {\r\n\t\tcontacts: [],\r\n\t\tloading: false\r\n\t}\r\n\r\n\tconst [state, dispatch] = useReducer(contactsReducer, initialContactsState)\r\n\r\n\tconst showLoader = () => dispatch({type: 'SHOW_LOADER'})\r\n\tconst hideLoader = () => dispatch({type: 'HIDE_LOADER'})\r\n\r\n\t// add actions interfaces\r\n\tconst fetchContacts = async () => {\r\n\t\tshowLoader()\r\n\t\tawait axios.get('http://localhost:3048/api/contacts').then(result => {\r\n\t\t\tconst payload = result.data\r\n\t\t\tdispatch({type: 'FETCH_CONTACTS', payload})\r\n\t\t\thideLoader()\r\n\t\t})\r\n\t}\r\n\r\n\tconst fetchContactById = async(id: string) => {\r\n\t\tconst contact = await axios.get(`http://localhost:3048/api/contacts/${id}`).then(result => {\r\n\t\t\tconst payload = result.data\r\n\t\t\tdispatch({type: 'FETCH_CONTACT', payload})\r\n\t\t\treturn payload\r\n\t\t})\r\n\t\treturn contact\r\n\t}\r\n\r\n\tconst updateContact = async (uContact: iContact) => {\r\n\t\tconst res = await axios.put(`http://localhost:3048/api/contacts/${uContact._id}`, uContact)\r\n\t\tconst payload = res.data \r\n\t\tdispatch({type: \"UPDATE_CONTACT\", payload})\r\n\t}\r\n\r\n\tconst addContact = async (nContact: iContactShort) => {\r\n\t\tconst res = await axios.post('http://localhost:3048/api/contacts', nContact)\r\n\t\tconst payload = res.data\r\n\t\tdispatch({type: \"ADD_CONTACT\", payload})\r\n\t}\r\n\r\n\tconst removeContact = async (id: string) => {\r\n\t\tawait axios.delete(`http://localhost:3048/api/contacts/${id}`).then(() => {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: 'REMOVE_CONTACT',\r\n\t\t\t\tpayload: id\r\n\t\t\t})\r\n\t\t})\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<contactsContext.Provider value={{\r\n\t\t\tcontacts: state.contacts,\r\n\t\t\tloading: state.loading,\r\n\t\t\tfetchContacts,\r\n\t\t\tremoveContact,\r\n\t\t\taddContact,\r\n\t\t\tupdateContact,\r\n\t\t\tfetchContactById\r\n\t\t}}>\r\n\t\t\t{children}\r\n\t\t</contactsContext.Provider>\r\n\t)\r\n}","import React from 'react'\nimport { render } from 'react-dom'\nimport { App } from './App'\nimport './assets/scss/index.scss'\nimport { ContactsState } from './context/contacts/ContactsState'\n\nrender(\n  <ContactsState>\n    <App />\n  </ContactsState>,\n  document.getElementById('root')\n)"],"sourceRoot":""}