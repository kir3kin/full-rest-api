{"version":3,"sources":["components/Card.tsx","API/contactsAPI.ts","components/CardLoader.tsx","App.tsx","index.tsx"],"names":["Card","contact","markContact","removeContact","titleClasses","marked","push","className","join","name","value","onClick","_id","disabled","request","url","a","method","data","headers","body","JSON","stringify","fetch","response","json","console","warn","message","CardLoader","role","App","useState","formData","setFormData","contacts","setContacts","loading","setLoading","useEffect","then","allContacts","inputHandle","event","prev","target","sendForm","preventDefault","nContact","id","find","c","newContact","map","log","filter","onSubmit","htmlFor","onChange","type","trim","length","render","document","getElementById"],"mappings":"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","file":"static/js/main.952ae8c2.chunk.js","sourcesContent":["import React from \"react\"\r\nimport { contactFuncType, iContact } from \"../interfaces/cards\"\r\n\r\ntype contactProps = {\r\n\tcontact: iContact\r\n\tmarkContact: contactFuncType\r\n\tremoveContact: contactFuncType\r\n}\r\n\r\nexport const Card: React.FC<contactProps> = ({\r\n\tcontact,\r\n\tmarkContact,\r\n\tremoveContact\r\n}) => {\r\n\r\n\tconst titleClasses = ['card-title']\r\n\tif (contact.marked) titleClasses.push('marked')\r\n\r\n\treturn (\r\n\t\t<div className=\"card mb-3\">\r\n\t\t\t<div className=\"card-body\" key={contact._id}>\r\n\t\t\t\t<h5\r\n\t\t\t\t\tclassName={titleClasses.join(' ')}\r\n\t\t\t\t>{contact.name}</h5>\r\n\t\t\t\t<p className=\"card-text\">{contact.value}</p>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-primary\"\r\n\t\t\t\t\tonClick={() => markContact(contact._id)}\r\n\t\t\t\t>Mark</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tdisabled={contact.marked}\r\n\t\t\t\t\tclassName=\"btn btn-danger\"\r\n\t\t\t\t\tonClick={() => removeContact(contact._id)}\r\n\t\t\t\t>Delete</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","type requestType = (\r\n\turl: string,\r\n\tmethod?: \"GET\" | \"POST\" | \"PUT\" | \"DELETE\",\r\n\tdata?: any\r\n) => any\r\n\r\nexport const request: requestType = async (url, method = \"GET\", data = null) => {\r\n\ttry {\r\n\t\tlet body\r\n// eslint-disable-next-line\r\n\t\tconst headers = <{['Content-Type']: string}>{} \r\n\t\tif (data) {\r\n\t\t\theaders['Content-Type'] = 'application/json'\r\n\t\t\tbody = JSON.stringify(data)\r\n\t\t}\r\n\r\n\r\n\t\tconst response = await fetch(url, {\r\n\t\t\tmethod,\r\n\t\t\theaders,\r\n\t\t\tbody\r\n\t\t})\r\n\r\n\t\treturn response.json()\r\n\t} catch(e) {\r\n\t\tconsole.warn('Error:', e.message)\r\n\t}\r\n}","import React from \"react\"\r\n\r\nexport const CardLoader: React.FC = () => (\r\n\t<div className=\"spinner-border text-primary\" role=\"status\">\r\n\t</div>\r\n)","import React, { useEffect, useState } from 'react'\nimport { Card } from './components/Card'\nimport { contactFuncType, iContact, iFormData } from './interfaces/cards'\nimport './assets/scss/App.scss'\nimport { request } from './API/contactsAPI'\nimport { CardLoader } from './components/CardLoader'\n\nexport const App: React.FC = () => {\n  const [formData, setFormData] = useState<iFormData>({\n    name: '',\n    value: ''\n  })\n  const [contacts, setContacts] = useState<iContact[]>([])\n  const [loading, setLoading] = useState<boolean>(false)\n\n  useEffect(() => {\n    setLoading(true)\n    request('http://localhost:3048/api/contacts').then((allContacts: any) => {\n      setContacts(allContacts)\n      setLoading(false)\n    })\n  }, [])\n\n  const canCreate = (): boolean => {\n    return !!formData.name.trim() && !!formData.value.trim()\n  }\n\n  const inputHandle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setFormData(prev => ({\n      ...prev,\n      ...{[event.target.name]: event.target.value}\n    }))\n  }\n  \n  const sendForm = async (event: React.FormEvent) => {\n    event.preventDefault()\n\n    await request('http://localhost:3048/api/contacts', 'POST', formData).then((nContact: any) => {\n      setContacts(prev => ([\n        ...prev,\n        nContact\n      ]))\n    })\n    setFormData(prev => ({name: '', value: ''}))\n  }\n\n  const markContact: contactFuncType = async id => {\n    const contact = contacts.find(c => c._id === id)\n    await request(`http://localhost:3048/api/contacts/${id}`, \"PUT\", {\n      ...contact,\n      marked: !contact!.marked\n    }).then((newContact: any) => {\n      setContacts(prev => prev.map(c => {\n        if (c._id === newContact._id) c.marked = newContact.marked\n        return c\n      }))\n    })\n  }\n\n  const removeContact: contactFuncType = async id => {\n    await request(`http://localhost:3048/api/contacts/${id}`, \"DELETE\").then((data: any) => {\n      console.log(data.message)\n      setContacts(prev => prev.filter(c => c._id !== id))\n    })\n  }\n\n  return (\n    <div className=\"container pt-3\">\n      <h1>REST API</h1>\n      <form\n        onSubmit={event => sendForm(event)}\n        className=\"form-inline mb-3\"\n      >\n        <div className=\"form-group mr-5\">\n          <label htmlFor=\"name\" className=\"mr-3\">Name</label>\n          <input\n            value={formData.name}\n            onChange={event => inputHandle(event)}\n            id=\"name\"\n            name=\"name\"\n            type=\"text\"\n            className=\"form-control\"\n            />\n        </div>\n        <div className=\"form-group mr-5\">\n          <label htmlFor=\"value\" className=\"mr-3\">Value</label>\n          <input\n            value={formData.value}\n            onChange={event => inputHandle(event)}\n            id=\"value\"\n            name=\"value\"\n            type=\"text\"\n            className=\"form-control\"\n          />\n        </div>\n        <button\n          type=\"submit\"\n          className=\"btn btn-primary\"\n          disabled={!canCreate()}\n        >Create</button>\n      </form>\n\n      {\n        contacts.length ? (\n          contacts.map(contact => {\n            return <Card\n              contact={contact}\n              markContact={markContact}\n              key={contact._id}\n              removeContact={removeContact}\n            />\n          })\n        ) : (loading ? <CardLoader /> : <p>There are no contacts!</p>)\n      }\n    </div>\n  )\n}","import React from 'react'\nimport { render } from 'react-dom'\nimport { App } from './App'\nimport './assets/scss/index.scss'\n\nrender(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}