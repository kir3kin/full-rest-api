{"version":3,"sources":["interfaces/alertContext.ts","context/contacts/contactsContext.ts","context/alert/alertContext.ts","assets/images/avatar-placeholder.png","context/types/alertTypes.ts","components/ContactItem.tsx","components/ContactsLoader.tsx","pages/ListContacts.tsx","pages/AddContact.tsx","components/EditContactItem.tsx","pages/EditContact.tsx","components/Alert.tsx","App.tsx","context/alert/alertReducer.ts","context/types/contactsTypes.ts","context/alert/AlertState.tsx","context/contacts/contactsReduser.ts","context/contacts/ContactsState.tsx","index.tsx"],"names":["alertMessageType","alertText","contactsContext","React","createContext","alertContext","AlertActionType","ContactItem","contact","removeContact","useContext","show","className","src","avatar","alt","name","email","to","_id","height","width","onClick","id","CONTACT_DELETE","WARN","e","CONTACT_DELETE_FAILED","DANGER","contactHandler","ContactsLoader","role","ListContact","contacts","loading","length","TransitionGroup","map","CSSTransition","timeout","classNames","AddContact","addContact","history","useHistory","defaultFormData","useState","formData","setFormData","submitHandler","event","a","preventDefault","CONTACT_ADD","SUCCESS","CONTACT_ADD_FAILED","inputHandle","prev","target","value","goBack","onSubmit","onChange","type","htmlFor","disabled","trim","EditContactItem","edContact","updateContact","setContact","CONTACT_UPDATE","CONTACT_UPDATE_FAILED","EditContact","contactId","useParams","actualContact","find","c","Object","keys","Alert","hide","alert","iconParams","in","visible","enter","exit","mountOnEnter","unmountOnExit","text","App","fetchContacts","useEffect","component","path","exact","ActionType","alertReducer","state","action","SHOW_ALERT","payload","HIDE_ALERT","AlertState","children","initialAlertState","DEFAULT","useReducer","dispatch","Provider","setTimeout","contactsReducer","FETCH_CONTACTS","ADD_CONTACT","REMOVE_CONTACT","filter","UPDATE_CONTACT","SHOW_LOADER","HIDE_LOADER","URL","ContactsState","axios","get","then","response","data","uContact","put","nContact","Error","aContact","post","delete","render","document","getElementById"],"mappings":"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","file":"static/js/main.56787f0b.chunk.js","sourcesContent":["export interface iAlertState {\r\n\tvisible: boolean\r\n\ttext: alertText\r\n\ttype: alertMessageType\r\n}\r\n\r\nexport interface iAlertContext {\r\n\tshow: (text: alertText, type: alertMessageType) => void\r\n\thide: () => void\r\n\talert: iAlertState\r\n}\r\n\r\nexport enum alertMessageType {\r\n\tSUCCESS = 'success',\r\n\tWARN = 'warning',\r\n\tDANGER = 'danger',\r\n\tDEFAULT = ''\r\n}\r\n\r\nexport enum alertText {\r\n\tCONTACT_ADD = 'Contact has been added!',\r\n\tCONTACT_ADD_FAILED = 'Contact has not been added!',\r\n\tCONTACT_UPDATE = 'Contact has been updated!',\r\n\tCONTACT_UPDATE_FAILED = 'Contact has not been updated!',\r\n\tCONTACT_DELETE = 'Contact has been deleted!',\r\n\tCONTACT_DELETE_FAILED = 'Contact has not been deleted!',\r\n\tDEFAULT = ''\r\n}","import React from \"react\"\r\nimport { iContactContext } from \"../../interfaces/contactsContext\"\r\n\r\nexport const contactsContext = React.createContext({} as iContactContext)","import { createContext } from \"react\"\r\nimport { iAlertContext } from \"../../interfaces/alertContext\"\r\n\r\nexport const alertContext = createContext({} as iAlertContext)","export default __webpack_public_path__ + \"static/media/avatar-placeholder.8b00224c.png\";","import { alertMessageType, alertText } from \"../../interfaces/alertContext\";\r\n\r\nexport enum AlertActionType {\r\n\tSHOW_ALERT,\r\n\tHIDE_ALERT\r\n}\r\n\r\n\r\n// actions\r\nexport interface showAlert {\r\n\ttype: AlertActionType.SHOW_ALERT,\r\n\tpayload: {\r\n\t\ttext: alertText\r\n\t\ttype: alertMessageType\r\n\t}\r\n}\r\n\r\nexport interface hideAlert {\r\n\ttype: AlertActionType.HIDE_ALERT\r\n}\r\n\r\nexport type AlertActions = showAlert | hideAlert","import React, { useContext } from \"react\"\r\nimport { iContact } from \"../interfaces/contacts\"\r\nimport { Trash, PencilSquare } from 'react-bootstrap-icons'\r\nimport { Link } from \"react-router-dom\"\r\nimport { contactsContext } from \"../context/contacts/contactsContext\"\r\nimport { alertContext } from \"../context/alert/alertContext\"\r\nimport { alertMessageType, alertText } from \"../interfaces/alertContext\"\r\nimport avatar from '../assets/images/avatar-placeholder.png'\r\n\r\n\r\nexport const ContactItem: React.FC<{contact: iContact}> = ({\r\n\tcontact\r\n}) => {\r\n\tconst { removeContact } = useContext(contactsContext)\r\n  const { show } = useContext(alertContext)\r\n\r\n\tconst contactHandler = (id: string) => {\r\n\t\ttry {\r\n\t\t\tremoveContact(id)\r\n\t\t\tshow(alertText.CONTACT_DELETE, alertMessageType.WARN)\r\n\t\t} catch(e) {\r\n\t\t\tshow(alertText.CONTACT_DELETE_FAILED, alertMessageType.DANGER)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"card mb-3\" key={contact._id}>\r\n\t\t\t<div className=\"card-body\">\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-9 d-flex flex-row align-items-center\">\r\n\t\t\t\t\t\t<div className=\"contact-image me-3\">\r\n\t\t\t\t\t\t\t<img src={avatar} className=\"w-100 h-100\" alt=\"avatar\" />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t<h5\r\n\t\t\t\t\t\t\t\tclassName=\"card-title\"\r\n\t\t\t\t\t\t\t>{contact.name}</h5>\r\n\t\t\t\t\t\t\t<p className=\"card-text fw-bolder email-blue\">{contact.email}</p>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-3 d-flex flex-row justify-content-end\">\r\n\t\t\t\t\t\t<Link\r\n\t\t\t\t\t\t\tto={`/edit-contact/${contact._id}`}\r\n\t\t\t\t\t\t\tclassName=\"btn btn-outline-primary border-0 d-flex align-items-center\"\r\n\t\t\t\t\t\t><PencilSquare height=\"2em\" width=\"2em\" /></Link>\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tclassName=\"btn btn-outline-danger border-0\"\r\n\t\t\t\t\t\t\tonClick={() => contactHandler(contact._id)}\r\n\t\t\t\t\t\t><Trash height=\"2em\" width=\"2em\" /></button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","import React from \"react\"\r\n\r\nexport const ContactsLoader: React.FC = () => (\r\n\t<div className=\"spinner-border text-primary\" role=\"status\">\r\n\t</div>\r\n)","import React, { useContext } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\"\r\nimport { ContactItem } from \"../components/ContactItem\"\r\nimport { ContactsLoader } from \"../components/ContactsLoader\"\r\nimport { contactsContext } from \"../context/contacts/contactsContext\"\r\nimport '../assets/scss/Contact.scss'\r\n\r\n\r\nexport const ListContact: React.FC = () => {\r\n\r\n  const { contacts, loading } = useContext(contactsContext)\r\n\r\n  \t// console.log('contacts:', contacts)\r\n\r\n\treturn (\r\n\t\t<>\r\n      <div className=\"row\">\r\n        <h2 className=\"col-6 mb-0\">Contact List</h2>\r\n        <div className=\"col-6 d-flex justify-content-end\">\r\n          <Link to='/add-contact' className=\"btn px-4 btn-primary\">Add Contact</Link>\r\n        </div>\r\n      </div>\r\n      <hr className=\"my-4\" />\r\n\r\n\t\t\t{contacts.length ? (\r\n\t\t\t\t<TransitionGroup>\r\n\t\t\t\t\t{contacts.map(contact => {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<CSSTransition\r\n\t\t\t\t\t\t\t\tkey={contact._id}\r\n\t\t\t\t\t\t\t\ttimeout={400}\r\n\t\t\t\t\t\t\t\tclassNames={'contact-item'}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<ContactItem\r\n\t\t\t\t\t\t\t\tcontact={contact}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</CSSTransition>\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t})}\r\n\t\t\t\t</TransitionGroup>\r\n\t\t\t) : (loading ?\r\n\t\t\t\t<ContactsLoader /> :\r\n\t\t\t\t<p>There are no contacts!</p>\r\n\t\t\t)}\r\n\t\t</>\r\n\t)\r\n}","import React, { useContext, useState } from \"react\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport { alertContext } from \"../context/alert/alertContext\"\r\nimport { contactsContext } from \"../context/contacts/contactsContext\"\r\nimport { alertMessageType, alertText } from \"../interfaces/alertContext\"\r\nimport { iContactShort } from \"../interfaces/contacts\"\r\n\r\nexport const AddContact: React.FC = () => {\r\n  const { addContact } = useContext(contactsContext)\r\n  const { show } = useContext(alertContext)\r\n  const history = useHistory()\r\n\r\n  const defaultFormData = {\r\n    name: '',\r\n    email: ''\r\n  }\r\n\r\n\tconst [formData, setFormData] = useState<iContactShort>(defaultFormData)\r\n\r\n\tconst submitHandler = async (event: React.FormEvent) => {\r\n    event.preventDefault()\r\n    try {\r\n      addContact(formData)\r\n      show(alertText.CONTACT_ADD, alertMessageType.SUCCESS)\r\n    } catch (e) {\r\n      show(alertText.CONTACT_ADD_FAILED, alertMessageType.DANGER)\r\n    }\r\n    setFormData(defaultFormData)\r\n  }\r\n  \r\n  \r\n\tconst canCreate = (): boolean => {\r\n    return !!formData.name.trim() && !!formData.email.trim() &&\r\n    (formData.name.length <= 20)\r\n  }\r\n\r\n\tconst inputHandle = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setFormData(prev => ({\r\n      ...prev,\r\n      ...{[event.target.name]: event.target.value}\r\n    }))\r\n  }\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t<div className=\"row\">\r\n\t\t\t<h2 className=\"col-6 mb-0\">Add contact</h2>\r\n\t\t\t<div className=\"col-6 d-flex justify-content-end\">\r\n        <button\r\n          className=\"btn px-3 btn-danger\"\r\n          onClick={() => { history.goBack() }}\r\n        >Back</button>\r\n      </div>\r\n\t\t</div>\r\n    <hr className=\"my-4\" />\r\n\t\t<form\r\n        onSubmit={event => submitHandler(event)}\r\n        className=\"\"\r\n      >\r\n        <div className=\"form-floating mb-3\">\r\n          <input\r\n            value={formData.name}\r\n            onChange={event => inputHandle(event)}\r\n            id=\"name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n          />\r\n          <label htmlFor=\"name\">Name</label>\r\n        </div>\r\n        <div className=\"form-floating mb-3\">\r\n          <input\r\n            value={formData.email}\r\n            onChange={event => inputHandle(event)}\r\n            id=\"email\"\r\n            name=\"email\"\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n          />\r\n          <label htmlFor=\"email\">Email</label>\r\n        </div>\r\n        <button\r\n          type=\"submit\"\r\n          className=\"btn btn-primary px-3\"\r\n          disabled={!canCreate()}\r\n        >Add</button>\r\n      </form>\r\n\t\t</>\r\n\t)\r\n}","import React, { useContext, useState } from \"react\"\r\nimport { alertContext } from \"../context/alert/alertContext\"\r\nimport { contactsContext } from \"../context/contacts/contactsContext\"\r\nimport { alertMessageType, alertText } from \"../interfaces/alertContext\"\r\nimport { iContact } from \"../interfaces/contacts\"\r\n\r\ntype editContactItemProps = {\r\n\tedContact: iContact\r\n}\r\n\r\nexport const EditContactItem: React.FC<editContactItemProps> = ({\r\n\tedContact\r\n}) => {\r\n\tconst { updateContact } = useContext(contactsContext)\r\n\tconst { show } = useContext(alertContext)\r\n\tconst [contact, setContact] = useState<iContact>(edContact)\r\n\r\n\tconst submitHandler = async (event: React.FormEvent) => {\r\n    event.preventDefault()\r\n\t\ttry {\r\n\t\t\tupdateContact(contact)\r\n\t\t\tshow(alertText.CONTACT_UPDATE, alertMessageType.SUCCESS)\r\n\t\t} catch(e) {\r\n\t\t\tshow(alertText.CONTACT_UPDATE_FAILED, alertMessageType.DANGER)\r\n\t\t}\r\n  }\r\n\r\n\tconst inputHandle = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n\t\tsetContact(prev => ({\r\n\t\t\t...prev,\r\n      ...{[event.target.name]: event.target.value}\r\n    }))\r\n  }\r\n\r\n\t// some kind of validation\r\n\tconst canUpdate = (): boolean => {\r\n\t\treturn !!contact.name.trim() &&\r\n\t\t!!contact.email.trim() &&\r\n\t\t(\r\n\t\t\tcontact.name !== edContact.name ||\r\n\t\t\tcontact.email !== edContact.email\r\n\t\t) &&\r\n\t\t(contact.name.length <= 20)\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t<form\r\n\t\t\tonSubmit={event => submitHandler(event)}\r\n\t\t\tclassName=\"\"\r\n\t\t>\r\n\t\t\t<div className=\"form-floating mb-3\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={contact.name}\r\n\t\t\t\t\tonChange={event => inputHandle(event)}\r\n\t\t\t\t\tid=\"name\"\r\n\t\t\t\t\tname=\"name\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor=\"name\">Name</label>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"form-floating mb-3\">\r\n\t\t\t\t<input\r\n\t\t\t\t\tvalue={contact.email}\r\n\t\t\t\t\tonChange={event => inputHandle(event)}\r\n\t\t\t\t\tid=\"email\"\r\n\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t/>\r\n\t\t\t\t<label htmlFor=\"email\">Email</label>\r\n\t\t\t</div>\r\n\t\t\t<button\r\n\t\t\t\ttype=\"submit\"\r\n\t\t\t\tclassName=\"btn btn-primary px-3\"\r\n\t\t\t\tdisabled={!canUpdate()}\r\n\t\t\t>Update</button>\r\n\t\t</form>\r\n\t\t</>\r\n\t)\r\n}","import React, { useContext } from \"react\"\r\nimport { useHistory, useParams } from \"react-router-dom\"\r\nimport { ContactsLoader } from \"../components/ContactsLoader\"\r\nimport { EditContactItem } from \"../components/EditContactItem\"\r\nimport { contactsContext } from \"../context/contacts/contactsContext\"\r\n\r\nexport const EditContact: React.FC = () => {\r\n\tconst history = useHistory()\r\n\tconst {id: contactId} = useParams<{id: string}>()\r\n\tconst { contacts } = useContext(contactsContext)\r\n\tconst actualContact = contacts.find(c => c._id === contactId)\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"row\">\r\n\t\t\t\t<h2 className=\"col-6 mb-0\">Edit contact</h2>\r\n\t\t\t\t<div className=\"col-6 d-flex justify-content-end\">\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tonClick={() => { history.goBack() }}\r\n\t\t\t\t\t\tclassName=\"btn px-3 btn-danger\"\r\n\t\t\t\t\t>Back</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t<hr className=\"my-4\" />\r\n\t\t\t{( actualContact && Object.keys(actualContact).length && actualContact._id === contactId) ? (\r\n\t\t\t<EditContactItem\r\n\t\t\tedContact={actualContact}\r\n\t\t\t/>\r\n\t\t\t) : (<ContactsLoader />) }\r\n\t\t</>\r\n\t)\r\n}","import React, { useContext } from \"react\"\r\nimport { alertContext } from \"../context/alert/alertContext\"\r\nimport { CSSTransition } from 'react-transition-group'\r\nimport { ExclamationTriangleFill, CheckCircleFill } from 'react-bootstrap-icons'\r\nimport '../assets/scss/Alert.scss'\r\n\r\nexport const Alert: React.FC = () => {\r\n\tconst { hide, alert} = useContext(alertContext)\r\n\r\n\tconst iconParams = {\r\n\t\tclassName: 'me-2',\r\n\t\theight: '1.5rem',\r\n\t\twidth: '1.5rem'\r\n\t}\r\n\r\n\treturn (\r\n\t\t<CSSTransition\r\n\t\t\tin={alert.visible}\r\n\t\t\ttimeout={{\r\n\t\t\t\tenter: 400,\r\n\t\t\t\texit: 200\r\n\t\t\t}}\r\n\t\t\tclassNames={'alert-transition'}\r\n\t\t\tmountOnEnter\r\n\t\t\tunmountOnExit\r\n\t\t>\r\n\t\t\t<div\r\n\t\t\t\tclassName={`alert alert-${alert.type} alert-dismissible text-center`}\r\n\t\t\t\trole=\"alert\"\r\n\t\t\t>\r\n\t\t\t\t{(alert.type === 'danger' || alert.type === 'warning') ? (\r\n\t\t\t\t\t<ExclamationTriangleFill {...iconParams} />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<CheckCircleFill {...iconParams} />\r\n\t\t\t\t)}\r\n\t\t\t\t{alert.text}\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={hide}\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tclassName=\"btn-close\"\r\n\t\t\t\t\tdata-bs-dismiss=\"alert\"\r\n\t\t\t\t\taria-label=\"Close\"\r\n\t\t\t\t></button>\r\n\t\t\t</div>\r\n\t\t</CSSTransition>\r\n\t)\r\n}","import React, { useContext, useEffect } from 'react'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport { ListContact } from './pages/ListContacts'\nimport { AddContact } from './pages/AddContact'\nimport { EditContact } from './pages/EditContact'\nimport { contactsContext } from './context/contacts/contactsContext'\nimport './assets/scss/App.scss'\nimport { Alert } from './components/Alert'\n\nexport const App: React.FC = () => {\n  const { fetchContacts } = useContext(contactsContext)\n  \n  useEffect(() => {\n    fetchContacts()\n  }, [])\n\n  return (\n    <div className=\"container pt-3\">\n    <h1 className=\"text-center\">Contact Manager</h1>\n    <Alert />\n    <hr className=\"my-4\" />\n      <BrowserRouter>\n        <Switch>\n          <Route component={ListContact} path=\"/\" exact />\n          <Route component={AddContact} path=\"/add-contact\" />\n          <Route component={EditContact} path=\"/edit-contact/:id\" />\n        </Switch>\n      </BrowserRouter>\n    </div>\n  )\n}","import { iAlertState } from \"../../interfaces/alertContext\"\r\nimport { AlertActionType, AlertActions } from \"../types/alertTypes\"\r\n\r\nexport const alertReducer = (\r\n\tstate: iAlertState,\r\n\taction: AlertActions\r\n): iAlertState => {\r\n\tswitch (action.type) {\r\n\t\tcase AlertActionType.SHOW_ALERT: {\r\n\t\t\treturn {\r\n\t\t\t\t...action.payload,\r\n\t\t\t\tvisible: true\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase AlertActionType.HIDE_ALERT: {\r\n\t\t\treturn {\t...state, visible: false }\r\n\t\t}\r\n\t\tdefault: return state\r\n\t}\r\n}\r\n","import { iContact } from \"../../interfaces/contacts\"\r\n\r\nexport enum ActionType {\r\n\tFETCH_CONTACTS,\r\n\tFETCH_CONTACT,\r\n\tREMOVE_CONTACT,\r\n\tADD_CONTACT,\r\n\tUPDATE_CONTACT,\r\n\tSHOW_LOADER,\r\n\tHIDE_LOADER\r\n}\r\n// actions\r\nexport interface fetchContacts {\r\n\ttype: ActionType.FETCH_CONTACTS,\r\n\tpayload: iContact[]\r\n}\r\n\r\nexport interface removeContact {\r\n\ttype: ActionType.REMOVE_CONTACT\r\n\tpayload: string\r\n}\r\n\r\nexport interface addContact {\r\n\ttype: ActionType.ADD_CONTACT\r\n\tpayload: iContact\r\n}\r\n\r\nexport interface updateContact {\r\n\ttype: ActionType.UPDATE_CONTACT\r\n\tpayload: iContact\r\n}\r\n\r\nexport interface showLoader {\r\n\ttype: ActionType.SHOW_LOADER\r\n}\r\n\r\nexport interface hideLoader {\r\n\ttype: ActionType.HIDE_LOADER\r\n}\r\n\r\nexport type ContactsActions = fetchContacts | removeContact | addContact | updateContact | showLoader | hideLoader","import React, { useReducer } from \"react\"\r\nimport { alertMessageType, alertText, iAlertState } from \"../../interfaces/alertContext\"\r\nimport { AlertActionType } from \"../types/alertTypes\"\r\nimport { alertContext } from \"./alertContext\"\r\nimport { alertReducer } from \"./alertReducer\"\r\n\r\nexport const AlertState: React.FC = ({ children }) => {\r\n\tconst initialAlertState: iAlertState = {\r\n\t\tvisible: false,\r\n\t\ttext: alertText.DEFAULT,\r\n\t\ttype: alertMessageType.DEFAULT\r\n\t}\r\n\tconst ALERT_LIVE_TIME = 1500\r\n\r\n\tconst [state, dispatch] = useReducer(alertReducer, initialAlertState)\r\n\r\n\tconst show = (text: alertText, type: alertMessageType): void => {\r\n\t\tdispatch({\r\n\t\t\ttype: AlertActionType.SHOW_ALERT,\r\n\t\t\tpayload: {text, type}\r\n\t\t})\r\n\t\tsetTimeout(() => {\r\n\t\t\thide()\r\n\t\t}, ALERT_LIVE_TIME)\r\n\t}\r\n\r\n\tconst hide = (): void => dispatch({type: AlertActionType.HIDE_ALERT})\r\n\r\n\treturn (\r\n\t\t<alertContext.Provider value={{\r\n\t\t\tshow, hide,\r\n\t\t\talert: state\r\n\t\t}}>\r\n\t\t\t{children}\r\n\t\t</alertContext.Provider>\r\n\t)\r\n}","import { iContactsState } from \"../../interfaces/contactsContext\"\r\nimport { ActionType, ContactsActions } from \"../types/contactsTypes\"\r\n\r\nexport const contactsReducer = (\r\n\tstate: iContactsState,\r\n\taction: ContactsActions\r\n): iContactsState => {\r\n\tswitch (action.type) {\r\n\t\tcase ActionType.FETCH_CONTACTS: {\r\n\t\t\treturn { ...state, contacts: action.payload }\r\n\t\t}\r\n\t\tcase ActionType.ADD_CONTACT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcontacts: [\r\n\t\t\t\t\t...state.contacts,\r\n\t\t\t\t\taction.payload\r\n\t\t\t\t]\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase ActionType.REMOVE_CONTACT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcontacts: state.contacts.filter(contact => contact._id !== action.payload)\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase ActionType.UPDATE_CONTACT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tcontacts: state.contacts.map(contact => {\r\n\t\t\t\t\tif (contact._id === action.payload._id)\r\n\t\t\t\t\t\treturn { ...contact, ...action.payload }\r\n\t\t\t\t\treturn contact\r\n\t\t\t\t})\r\n\t\t\t}\r\n\t\t}\r\n\t\tcase ActionType.SHOW_LOADER: {\r\n\t\t\treturn { ...state, loading: true }\r\n\t\t}\r\n\t\tcase ActionType.HIDE_LOADER: {\r\n\t\t\treturn { ...state, loading: false }\r\n\t\t}\r\n\t\tdefault: return state\r\n\t}\r\n}","import React, { useReducer } from \"react\"\r\nimport axios from 'axios'\r\nimport { contactsReducer } from \"./contactsReduser\"\r\nimport { contactsContext } from \"./contactsContext\"\r\nimport { iContact, iContactShort } from \"../../interfaces/contacts\"\r\nimport { iContactsState } from \"../../interfaces/contactsContext\"\r\nimport { ActionType } from \"../types/contactsTypes\"\r\n\r\nconst URL = 'http://localhost:3048/api/contacts'\r\n\r\nexport const ContactsState: React.FC = ({ children }) => {\r\n\tconst initialContactsState: iContactsState = {\r\n\t\tcontacts: [],\r\n\t\tloading: false\r\n\t}\r\n\r\n\tconst [state, dispatch] = useReducer(contactsReducer, initialContactsState)\r\n\r\n\tconst showLoader = () => dispatch({type: ActionType.SHOW_LOADER})\r\n\tconst hideLoader = () => dispatch({type: ActionType.HIDE_LOADER})\r\n\r\n\tconst fetchContacts = async () => {\r\n\t\tshowLoader()\r\n\t\tawait axios.get<iContact[]>(URL).then(response => {\r\n\t\t\tconst payload = response.data\r\n\t\t\tdispatch({type: ActionType.FETCH_CONTACTS, payload})\r\n\t\t\t\r\n\t\t\thideLoader()\r\n\t\t})\r\n\t}\r\n\r\n\t// todo: add return type = promise\r\n\tconst updateContact = async (uContact: iContact) => {\r\n\t\ttry {\r\n\t\t\tconst nContact = await axios.put<iContact>(`${URL}/${uContact._id}`, uContact)\r\n\t\t\tconst payload = nContact.data\r\n\t\t\tdispatch({type: ActionType.UPDATE_CONTACT, payload})\r\n\t\t} catch(e) {\r\n\t\t\tthrow new Error(e)\r\n\t\t}\r\n\t}\r\n\r\n\tconst addContact = async (aContact: iContactShort) => {\r\n\t\ttry {\r\n\t\t\tconst nContact = await axios.post<iContact>(URL, aContact)\r\n\t\t\tconst payload = nContact.data\r\n\t\t\tdispatch({type: ActionType.ADD_CONTACT, payload})\r\n\t\t} catch(e) {\r\n\t\t\tthrow new Error(e)\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tconst removeContact = async (id: string) => {\r\n\t\ttry {\r\n\t\t\tawait axios.delete(`${URL}/${id}`).then(() => {\r\n\t\t\t\tdispatch({type: ActionType.REMOVE_CONTACT, payload: id})\r\n\t\t\t})\r\n\t\t} catch(e) {\r\n\t\t\tthrow new Error(e)\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<contactsContext.Provider value={{\r\n\t\t\tcontacts: state.contacts,\r\n\t\t\tloading: state.loading,\r\n\t\t\tfetchContacts,\r\n\t\t\tremoveContact,\r\n\t\t\taddContact,\r\n\t\t\tupdateContact\r\n\t\t}}>\r\n\t\t\t{children}\r\n\t\t</contactsContext.Provider>\r\n\t)\r\n}","import React from 'react'\nimport { render } from 'react-dom'\nimport { App } from './App'\nimport { AlertState } from './context/alert/AlertState'\nimport { ContactsState } from './context/contacts/ContactsState'\nimport './assets/scss/index.scss'\n\nrender(\n  <ContactsState>\n    <AlertState>\n      <App />\n    </AlertState>\n  </ContactsState>,\n  document.getElementById('root')\n)"],"sourceRoot":""}